// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ProductServiceInterface is an autogenerated mock type for the ProductServiceInterface type
type ProductServiceInterface struct {
	mock.Mock
}

// Insert provides a mock function with given fields: productID, productName, price, stock
func (_m *ProductServiceInterface) Insert(productID string, productName string, price float64, stock int) error {
	ret := _m.Called(productID, productName, price, stock)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, float64, int) error); ok {
		r0 = rf(productID, productName, price, stock)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewProductServiceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewProductServiceInterface creates a new instance of ProductServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProductServiceInterface(t mockConstructorTestingTNewProductServiceInterface) *ProductServiceInterface {
	mock := &ProductServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
